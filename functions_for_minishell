These are simple explanations of all the allowed external functions:

Here's an explanation of each function:

readline: Reads a line from the terminal, providing features like line editing, history, and autocompletion.
rl_clear_history: Clears the history list of the readline function.
rl_on_new_line: Used by readline to reset the line state when moving to a new line.
rl_replace_line: Replaces the contents of the readline buffer.
rl_redisplay: Redraws the line being edited in readline.
add_history: Adds the most recent line read by readline to the history.
printf: Prints formatted output to stdout.
malloc: Allocates a specified number of bytes of memory.
free: Frees previously allocated memory.
write: Writes data to a file descriptor.
access: Checks the file's accessibility for the current user.
open: Opens a file descriptor.
read: Reads data from a file descriptor.
close: Closes a file descriptor.
fork: Creates a new process (child process) by duplicating the calling process.
wait: Waits for a child process to finish.
waitpid: Waits for a specific child process to end.
wait3/wait4: Variants of wait, allowing more control and returning more information.
signal: Sets a function to handle a specific signal.
sigaction: Examines or changes the action associated with a specific signal.
sigemptyset/sigaddset: Initializes or adds a signal to a signal set.
kill: Sends a signal to a process or a group of processes.
exit: Terminates the calling process.
getcwd: Gets the current working directory.
chdir: Changes the current working directory.
stat/lstat/fstat: Retrieves information about a file.
unlink: Removes a link to a file.
execve: Executes a program, replacing the current process.
dup/dup2: Duplicates a file descriptor.
pipe: Creates a pipe for inter-process communication.
opendir/readdir/closedir: Opens, reads from, and closes a directory stream.
strerror/perror: Produces error messages based on the error numbers.
isatty: Tests whether a file descriptor refers to a terminal.
ttyname: Returns the name of the terminal associated with a file descriptor.
ttyslot: Finds the slot of the current user's terminal in the system's utmp file.
ioctl: Controls device parameters of special files.
getenv: Gets an environment variable.
tcsetattr/tcgetattr: Sets or gets terminal attributes.
tgetent/tgetflag/tgetnum/tgetstr/tgoto/tputs: Functions related to terminal capabilities and terminal control using the termcap library.
These functions are fundamental in system programming, especially in Unix-based environments, and are used for a wide range of applications from simple file operations to complex programs involving process control and terminal manipulation.